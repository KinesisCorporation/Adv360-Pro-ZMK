#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

#define HYP(key)        LS(LC(LA(LG(key))))
#define HYPER           LS(LC(LA(LGUI)))

// Switch Language
#define LANG            LC(SPACE)

// Take a screen shot, with complex controls or simple controls
#define SCRSHT_SLOW     LG(LS(N5))
#define SCRSHT_FAST     LG(LS(N4))

// Back Tab (shift-tab)
#define BTAB            LS(TAB)

// Lock the Mac
#define MACLOCK         LG(LC(Q))

// Hammerspoon keyboard navigable expose
#define VIMPOSE         LC(LG(DOT))
#define EXPOSE          LC(UP)

// Copy Paste tap dance
#define SH_COPY         LG(C)
#define SH_PASTE        LG(V)

// Emoji shortcut
#define EMJ             LC(LG(SPACE))

// Box Brackets
//&kp LBKT &kp RBKT

// Left, right Brace (Curly) brackets
#define LBBKT           RS(LBKT)
#define RBBKT           RS(RBKT)

// Left, right Round brackets
#define LRBKT           RS(N9)
#define RRBKT           RS(N0)


&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
};

&lt {
    quick_tap_ms = <200>;
};

/ {
    behaviors {
      #include "macros.dtsi"

      hm: homerow_mods {
          compatible = "zmk,behavior-hold-tap";
          label = "HOMEROW_MODS";
          #binding-cells = <2>;
          tapping-term-ms = <200>;
          quick_tap_ms = <175>;
          flavor = "tap-preferred";
          bindings = <&kp>, <&kp>;
      };

      C_P:
        tap_dance_0 {
          compatible = "zmk,behavior-tap-dance";
          label = "C_P";
          #binding-cells = <0>;
          tapping-term-ms = <200>;
          bindings = <&kp SH_COPY>, <&kp SH_PASTE>;
        };

      SCRNSHT:
        tap_dance_1 {
          compatible = "zmk,behavior-tap-dance";
          label = "SCRNSHT";
          #binding-cells = <0>;
          tapping-term-ms = <200>;
          bindings = <&kp SCRSHT_SLOW>, <&kp SCRSHT_FAST>;
        };

      EXPOSES:
        tap_dance_2 {
          compatible = "zmk,behavior-tap-dance";
          label = "EXPOSES";
          #binding-cells = <0>;
          tapping-term-ms = <200>;
          bindings = <&kp VIMPOSE>, <&kp EXPOSE>;
        };

        LOCK_SLEEP:
        tap_dance_3 {
          compatible = "zmk,behavior-tap-dance";
          label = "LOCK_SLEEP";
          #binding-cells = <0>;
          tapping-term-ms = <200>;
          bindings = <&kp MACLOCK>, <&kp K_SLEEP>;
        };

        F12_EMJ:
        tap_dance_4 {
          compatible = "zmk,behavior-tap-dance";
          label = "EMJ_F12";
          #binding-cells = <0>;
          tapping-term-ms = <200>;
          bindings = <&kp F12>, <&kp EMJ>;
        };
    };

  keymap {
    compatible = "zmk,keymap";

    default_layer {
      bindings = <
        &kp EQUAL     &kp N1    &kp N2         &kp N3   &kp N4     &kp N5 &tog 1                                                                           &mo 3           &kp N6 &kp N7 &kp N8    &kp N9   &kp N0   &kp MINUS
        &F12_EMJ      &kp Q     &kp W          &kp E    &kp R      &kp T  &SCRNSHT                                                                         &LOCK_SLEEP     &kp Y  &kp U  &kp I     &kp O    &kp P    &kp BSLH
        &mt LCTRL ESC &kp A     &kp S          &kp D    &kp F      &kp G  &C_P                   &kp LGUI  &mt LALT BTAB  &mt RALT TAB  &kp RGUI           &EXPOSES        &kp H  &kp J  &kp K     &kp L    &kp SEMI &kp SQT
        &kp LSHFT     &kp Z     &kp X          &kp C    &kp V      &kp B                                   &kp HOME       &kp PG_UP                                        &kp N  &kp M  &kp COMMA &kp DOT  &kp FSLH &kp RSHFT
        &mo 2         &kp GRAVE &mt HYPER LANG &kp LEFT &kp RIGHT                       &kp BSPC &kp DEL   &kp END        &kp PG_DN     &kp ENTER &kp SPACE                       &kp UP &kp DOWN  &kp LBKT &kp RBKT &mo 2
      >;
    };
    keypad {
      bindings = <
        &kp EQUAL       &kp N1    &kp N2          &kp N3   &kp N4     &kp N5        &trans                                                                                &mo 3         &kp N6 &kp KP_NUM &kp KP_EQUAL &kp KP_DIVIDE &kp KP_MULTIPLY &kp MINUS
        &trans          &kp Q     &kp W           &kp E    &kp R      &trans        &kp C_MUTE                                                                            &kp C_VOL_UP  &kp Y  &kp KP_N7  &kp KP_N8    &kp KP_N9     &kp KP_MINUS    &kp BSLH
        &trans          &kp A     &kp S           &kp D    &kp F      &trans        &kp C_PP                     &kp LGUI  &trans       &trans        &kp RGUI            &kp C_VOL_DN  &kp H  &kp KP_N4  &kp KP_N5    &kp KP_N6     &kp KP_PLUS     &kp SQT
        &kp LSHFT       &kp Z     &kp X           &kp C    &kp V      &kp B                                                &kp HOME     &kp PG_UP                                       &kp N  &kp KP_N1  &kp KP_N2    &kp KP_N3     &kp KP_ENTER    &kp RSHFT
        &mo 2           &kp GRAVE &trans          &kp LEFT &kp RIGHT                                   &kp BSPC  &kp DEL   &kp END      &kp PG_DN     &kp ENTER &kp KP_N0                      &kp UP     &kp DOWN     &kp KP_DOT    &kp RBKT        &mo 2
      >;
    };
    fn {
      bindings = <
        &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &tog 1                                           &mo 3      &kp F7    &kp F8    &kp F9    &kp F10   &kp F11     &kp F12
        &trans &trans &trans &trans &trans &trans  &none                                           &none      &trans    &trans    &trans    &trans    &trans      &trans
        &trans &trans &trans &trans &trans &trans  &none        &trans &trans &trans &trans        &kp LRBKT  &kp RRBKT &kp LBKT  &kp RBKT  &kp LBBKT &kp RBBKT   &kp GRAVE
        &trans &trans &trans &trans &trans &trans                      &trans &trans                          &trans    &trans    &trans    &trans    &trans      &trans
        &trans &trans &trans &trans &trans               &trans &trans &trans &trans &trans &trans                      &trans    &trans    &trans    &trans      &trans
      >;
    };
    mod {
      bindings = <
        &none &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none                                                                     &trans                 &none        &none        &none        &none &none &none
        &none &none        &none        &none        &none        &none        &bootloader                                                               &bootloader            &none        &none        &none        &none &none &none
        &none &none        &none        &none        &none        &none        &none                   &none &none &bt BT_CLR &none                      &rgb_ug RGB_MEFS_CMD 5 &none        &none        &none        &none &none &none
        &none &none        &none        &none        &none        &none                                      &none &none                                                        &none        &none        &none        &none &none &none
        &none &none        &none        &none        &none                                       &none &none &none &none      &bl BL_TOG &rgb_ug RGB_TOG                                     &bl BL_INC   &bl BL_DEC   &none &none &none

      >;
    };
  };
};
