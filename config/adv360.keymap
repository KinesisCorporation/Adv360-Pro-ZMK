
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
    combos {
      compatible = "zmk,combos";
      lctrl {
          timeout-ms = <30>;
          key-positions = <29 30>;
          bindings = <&kp LCTRL>;
      };
      lalt {
          timeout-ms = <30>;
          key-positions = <30 31>;
          bindings = <&kp LALT>;
      };
      df_mod {
          timeout-ms = <50>;
          key-positions = <31 32>;
          bindings = <&mo 4>;
      };
      laltcmd {
          timeout-ms = <30>;
          key-positions = <30 31 32>;
          bindings = <&kp LA(LEFT_COMMAND)>;
      };
      lctrlcmd {
          timeout-ms = <30>;
          key-positions = <29 31 32>;
          bindings = <&kp LC(LEFT_COMMAND)>;
      };
      rctrl {
          timeout-ms = <30>;
          key-positions = <44 43>;
          bindings = <&mt LCTRL RCTRL>;
      };
      ralt {
          timeout-ms = <30>;
          key-positions = <43 42>;
          bindings = <&mt LALT RALT>;
      };
      ralt2 {
          timeout-ms = <50>;
          key-positions = <42 41>;
          bindings = <&kp RALT>;
      };
      creturn {
          timeout-ms = <50>;
          key-positions = <55 56>;
          bindings = <&kp RETURN>;
      };
      ctab {
          timeout-ms = <30>;
          key-positions = <49 50>;
          bindings = <&kp TAB>;
      };
      escr {
          timeout-ms = <30>;
          key-positions = <29 32>;
          bindings = <&kp ESC>;
      };
      c_nj {
          timeout-ms = <60>;
          key-positions = <42 55>;
          bindings = <&macro_nj>;
      };
      c_home {
          timeout-ms = <30>;
          key-positions = <73 72>;
          bindings = <&kp HOME>;
      };
      c_end {
          timeout-ms = <50>;
          key-positions = <71 74>;
          bindings = <&kp END>;
      c_end2 {
          timeout-ms = <50>;
          key-positions = <56 71>;
          bindings = <&kp END>;
      };
      c_pgup {
          timeout-ms = <50>;
          key-positions = <71 72>;
          bindings = <&kp PG_UP>;
      };
      c_pgdn {
          timeout-ms = <50>;
          key-positions = <73 74>;
          bindings = <&kp PG_DN>;
      };
      c_dot {
          timeout-ms = <50>;
          key-positions = <42 57>;
          bindings = <&kp DOT>;
      };
      c_comma {
          timeout-ms = <50>;
          key-positions = <57 56>;
          bindings = <&kp COMMA>;
      };
      c_dot2 {
          timeout-ms = <50>;
          key-positions = <73 56>;
          bindings = <&kp DOT>;
      };
      raltctrl {
          timeout-ms = <40>;
          key-positions = <41 42 43>;
          bindings = <&kp LG(LA(LEFT_CONTROL))>;
      };
      layer2_1 {
          timeout-ms = <30>;
          key-positions = <29 47>;
          bindings = <&mo 2>;
      };
      layer2_2 {
          timeout-ms = <30>;
          key-positions = <44 58>;
          bindings = <&mo 2>;
    };
      rctrl2 {
          timeout-ms = <30>;
          key-positions = <24 41>;
          bindings = <&kp LCTRL>;
      };
};
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
    bhm: balanced_homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick-tap-ms = <0>;
        flavor =  "hold-preferred";
        bindings = <&kp>, <&kp>;
    };
    pht: positional_hold_tap {
        compatible = "zmk,behavior-hold-tap";
        label = "POSITIONAL_HOLD_TAP";
        #binding-cells = <2>;
        flavor = "hold-preferred";
        tapping-term-ms = <400>;
        quick-tap-ms = <200>;
        bindings = <&kp>, <&kp>;
        hold-trigger-key-positions = <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>, <14>, <15>, <16>, <17>, <18>, <19>, <20>, <21>, <26>, <27>, <28>, <29>, <30>, <31>, <32>, <33>, <34>, <35>, <36>, <37>, <38>, <39>, <45>, <46>, <47>, <48>, <49>, <50>, <51>, <52>, <53>, <59>, <60>, <61>, <62>, <63>, <64>, <65>, <66>, <67>, <68>, <69>, <70>; 
    };
    pht2: positional_hold_tap2 {
        compatible = "zmk,behavior-hold-tap";
        label = "POSITIONAL_HOLD_TAP2";
        #binding-cells = <2>;
        flavor = "hold-preferred";
        tapping-term-ms = <200>;
        quick-tap-ms = <150>;
        bindings = <&kp>, <&kp>;
        hold-trigger-key-positions = <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <14>, <15>, <16>, <17>, <18>, <19>, <20>, <21>, <22>, <23>, <24>, <25>, <29>, <30>, <31>, <32>, <33>, <35>, <36>, <37>, <38>, <39>, <40>, <41>, <42>, <43>, <44>, <45>, <46>, <47>, <48>, <49>, <50>, <51>, <54>, <55>, <56>, <57>, <58>, <59>, <65>, <66>, <67>, <68>, <69>, <70>, <71>, <72>, <73>; 
    };
  };
    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
      &kp GRAVE              &kp N1                    &kp Q                       &kp T                  &kp N4  &kp N5                   &kp F1                                                                      &kp N6  &kp N7    &kp N8  &kp N9    &kp N0        &kp MINUS              &kp EQUAL
        &kp TAB               &kp Q                    &kp W                       &kp E                   &kp R   &kp T                   &kp F2                                                                     &kp F12   &kp Y     &kp U   &kp I     &kp O         &kp SEMI               &kp BSLH
  &mt LCTRL ESC               &kp A                    &kp S                       &kp D                   &kp F   &kp G                   &kp F3              &kp F4  &kp F7                  &kp F9      &kp F10    &kp F11   &kp H     &kp J   &kp K     &kp L      &lt 2 COMMA         &kp APOSTROPHE
 &kp LEFT_SHIFT        &pht RSHFT Z                    &kp X                       &kp C                   &kp V   &kp B                                               &kt F6                  &kp F8                           &kp B     &kp N   &kp M     &kp P  &pht2 LSHFT DOT  &mt RIGHT_SHIFT SLASH
          &mo 3  &lt 1 LEFT_BRACKET  &mt LCTRL RIGHT_BRACKET  &mt LEFT_WIN RIGHT_CONTROL  &mt LEFT_ALT RIGHT_ALT                    &kp BACKSPACE  &mt LEFT_SHIFT DEL  &kp F5                  &tog 2  &lt 1 ENTER  &kp SPACE          &kp LEFT  &kp UP  &kp DOWN        &kp RIGHT              &kp COMMA
            >;
        };

        layer_keypad {
            bindings = <
    &kp F1  &kp F2  &kp F3  &kp F4        &kp F5  &kp F6              &trans                                                                    &kp F7                &kp F8        &kp F9       &kp F10       &kp F11       &kp F12                &kp F13
    &trans   &mo 0   &mo 0   &mo 0         &mo 0   &kp T               &none                                                                     &none       &kp KP_MULTIPLY  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp KP_MINUS               &kp BSLH
    &trans   &mo 0   &mo 0   &mo 0         &mo 0   &kp G               &none  &kp LCTRL   &kp LALT                   &kp LGUI  &kp RCTRL         &none       &kp KP_MULTIPLY  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6   &kp KP_PLUS                &kp SQT
 &kp LSHFT   &mo 0   &mo 0   &mo 0         &mo 0   &kp B                                    &trans                  &kp PG_UP                           &kp LEFT_PARENTHESIS  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp KP_ENTER  &kp RIGHT_PARENTHESIS
    &trans  &trans  &trans  &trans  &kp LEFT_WIN                    &kp BSPC    &kp DEL  &kp COMMA                  &kp PG_DN     &trans  &kp NUMBER_0                              &kp N0     &kp COMMA       &kp DOT  &kp KP_ENTER                  &mo 2
            >;
        };

        layer_fn {
            bindings = <
 &kp F1  &kp F2      &kp F3  &kp F4  &kp F5  &kp F6            &trans                                                           &kp F7            &kp F8             &kp F9               &kp F10                &kp F11          &kp F12  &kp F13
 &trans  &trans  &kp LA(F4)  &trans  &trans  &trans             &none                                                            &none            &trans             &trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS        &kp COLON   &trans
 &trans  &trans      &trans  &trans  &trans  &trans             &none  &trans  &trans                  &trans  &trans            &none  &kp LEFT_BRACKET  &kp RIGHT_BRACKET       &kp EXCLAMATION           &kp QUESTION           &trans   &trans
 &trans  &trans      &trans  &trans  &trans  &trans                            &trans                  &trans                             &kp LEFT_BRACE    &kp RIGHT_BRACE         &kp LS(COMMA)            &kp LS(DOT)  &kp PRINTSCREEN   &trans
 &trans  &trans      &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &trans  &kp PRINTSCREEN                          &kp PAGE_UP         &kp PAGE_DOWN               &kp HOME          &kp END   &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &none                                                                          &trans   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none            &bootloader                                                                     &bootloader   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none                  &none   &none   &none                  &bt BT_CLR       &none  &rgb_ug RGB_MEFS_CMD 5   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none                                  &none                       &none                                       &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none                                &none   &none   &none                       &none  &bl BL_TOG         &rgb_ug RGB_TOG          &bl BL_INC  &bl BL_DEC   &none   &none   &none
            >;
        };

        layer_Layer__4 {
            bindings = <
 &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6            &trans                                                  &kp F7  &kp F8                &kp F9               &kp F10               &kp F11        &kp F12  &kp F13
 &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                  &trans  &trans  &kp LC(LG(NUMBER_7))  &kp LC(LG(NUMBER_8))  &kp LC(LG(NUMBER_9))         &trans   &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &kp LC(LG(NUMBER_4))      &kp LG(NUMBER_5)      &kp LG(NUMBER_6)         &trans   &trans
 &trans  &trans  &trans  &trans  &trans  &trans                            &trans                  &trans                  &trans        &kp LS(LG(N1))        &kp LG(LC(N2))        &kp LC(LG(N3))         &trans   &trans
 &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &trans  &trans                  &kp LG(LEFT)            &kp LG(UP)          &kp LG(DOWN)  &kp LG(RIGHT)   &trans
            >;
        };

        layer_shortcut {
            bindings = <
 &trans  &trans      &trans  &trans  &trans  &trans            &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &kp LA(F4)  &trans  &trans  &trans            &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans      &trans   &kp A  &trans  &trans            &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans      &trans  &trans  &trans  &trans                            &trans                  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans      &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

    };
};
