
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"
    #include "version.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
        &kp EQUAL  &macro_macro_w1  &macro_macro_w2    &kp UP_ARROW         &kp DOWN  &kp N5                       &tog 1                                                                                   &mo 3  &kp N6        &kp N7         &kp N8            &kp N9             &kp N0     &kp MINUS
          &kp TAB            &kp Q            &kp W           &kp E            &kp R   &kp T                        &none                                                                                   &none   &kp Y         &kp U          &kp I             &kp O              &kp P      &kp BSLH
 &kp LEFT_CONTROL            &kp A            &kp S           &kp D          &lt 1 F   &kp G            &macro_macro_helm         &kp F5      &kp F6                            &kp F7      &kp F12         &none   &kp H         &kp J          &kp K             &kp L           &kp SEMI       &kp SQT
          &kp ESC            &kp Z            &kp X           &kp C            &kp V   &kp B                                                 &kp F11                      &kp CAPSLOCK                              &kp N         &kp M        &kp DOT         &kp COMMA          &kp SLASH  &kp LEFT_ALT
            &kp N            &kp M            &none  &kp LEFT_ARROW  &kp RIGHT_ARROW                         &kp LEFT_GUI  &kp BACKSPACE  &kp LSHIFT                  &kp LEFT_CONTROL  &lt 2 SPACE  &kp KP_ENTER          &kp UP_ARROW  &kp BACKSPACE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET   &lt 2 SPACE
            >;
        };

        layer_keypad {
            bindings = <
 &kp EQUAL        &kp N1        &kp N2        &kp N3        &kp N4  &kp N5               &trans                                                              &mo 3    &kp N6    &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
   &kp TAB        &kp N1         &kp W         &kp E         &kp R   &kp T                &none                                                              &none     &kp Y     &kp KP_N7     &kp KP_N8      &kp KP_N9     &kp KP_MINUS   &kp BSLH
   &kp ESC         &kp A         &kp S         &kp D         &kp F   &kp G                &none  &kp LCTRL   &kp LALT                  &kp LGUI  &kp RCTRL   &none     &none  &kp NUMBER_1  &kp NUMBER_2   &kp NUMBER_3     &kp NUMBER_4    &kp SQT
 &kp LSHFT         &kp Z         &kp X         &kp C         &kp V   &kp B                                      &none                     &none                     &kp HOME  &kp NUMBER_5  &kp NUMBER_6   &kp NUMBER_7     &kp NUMBER_8      &none
     &none  &kp NUMBER_5  &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8                    &kp RSHFT      &mo 2  &kp GRAVE                  &kp CAPS      &none   &none            &kp NUMBER_9  &kp NUMBER_0        &kp END        &kp PG_DN  &kp ENTER
            >;
        };

        layer_fn {
            bindings = <
 &kp F1    &kp F2      &kp F3            &kp F4             &kp F5     &kp F6               &tog 1                                                   &mo 3     &kp F7      &kp F8  &kp F9    &kp F10  &kp F11  &kp F12
 &trans  &kp EXCL      &kp AT    &kp LEFT_BRACE    &kp RIGHT_BRACE   &kp PIPE                &none                                                   &none     &trans      &trans  &trans     &trans   &trans   &trans
 &trans  &kp AMPS  &kp DOLLAR          &kp LPAR           &kp RPAR  &kp GRAVE            &kp TILDE  &trans  &trans                  &trans  &trans   &none   &kp LEFT    &kp DOWN  &kp UP  &kp RIGHT    &none    &none
 &trans  &kp HASH   &kp CARET  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp TILDE                                &none                   &none                  &kp MINUS       &none   &none     &trans    &none    &none
  &none     &none      &trans            &trans             &trans                          &trans  &trans  &trans                  &trans   &none  &trans             &kp ESCAPE  &trans     &trans   &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                             &none                                                                              &trans  &bt BT_SEL 0     &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4       &none
  &none         &none         &none         &none         &none         &none                       &bootloader                                                                         &bootloader         &none            &none         &none         &none         &none       &none
  &none         &none         &none         &none         &none         &none            &rgb_ug RGB_MEFS_CMD 5  &bt BT_CLR   &none                  &bt BT_CLR  &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5         &none            &none         &none         &none         &none       &none
  &none         &none         &none         &none         &none         &none                                                 &none                       &none                                             &none            &none         &none         &none         &none       &none
  &none         &none         &none         &none         &none                                           &none       &none   &none                       &none  &bl BL_INC              &bl BL_DEC                &rgb_ug RGB_TOG    &bl BL_TOG         &none         &none  &bl BL_TOG
            >;
        };

    };
};
