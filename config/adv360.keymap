
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
 &kp GRAVE  &kp N1    &kp N2     &kp N3     &kp N4  &kp N5                    &macro_=>                                                             &tog 3  &kp N6  &kp N7     &kp N8    &kp N9    &kp N0            &none
   &kp TAB   &kp Q     &kp W      &kp E      &kp R   &kp T            &macro_slim_arrow                                                              &none   &kp Y   &kp U      &kp I     &kp O     &kp P         &kp BSLH
 &kp LCTRL   &kp A     &kp S      &kp D      &kp F   &kp G             &macro_fat_arrow    &none         &none                   &none  &kp ESC      &none   &kp H   &kp J      &kp K     &kp L  &kp SEMI          &kp SQT
 &kp LSHFT   &kp Z     &kp X      &kp C      &kp V   &kp B                                            &kp LGUI                   &none                       &kp N   &kp M  &kp COMMA   &kp DOT  &kp FSLH        &kp ENTER
     &none   &none  &kp CAPS  &kp EQUAL  &kp MINUS                             &kp BSPC  &kp DEL  &kp LEFT_ALT                   &mo 1    &mo 2  &kp SPACE           &none   &kp LBKT  &kp RBKT     &none  &kp RIGHT_SHIFT
            >;
        };

        layer_keypad {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                   &mo 3   &none  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY   &none
 &trans  &trans  &trans  &trans  &trans  &trans             &none                                                   &none   &none      &kp N7        &kp N8         &kp N9     &kp KP_MINUS   &none
 &trans  &trans  &trans  &trans  &trans  &trans             &none  &trans  &trans                  &trans  &trans   &none   &none      &kp N4        &kp N5         &kp N6      &kp KP_PLUS   &none
 &trans  &trans  &trans  &trans  &trans  &trans                            &trans                  &trans                   &none      &kp N1        &kp N2         &kp N3     &kp KP_ENTER   &none
 &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &trans  &trans              &kp N0       &kp DOT      &kp MINUS        &kp EQUAL   &none
            >;
        };

        layer_fn {
            bindings = <
  &none  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5            &kp F6                                                   &mo 3    &kp F7         &kp F8                &kp F9                &kp F10  &kp F11  &kp F12
 &trans  &trans  &trans  &trans  &trans  &trans             &none                                                   &none     &none          &none  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &none    &none
 &trans  &trans  &trans  &trans  &trans  &trans             &none  &trans  &trans                  &trans  &trans   &none  &kp LEFT       &kp DOWN                &kp UP              &kp RIGHT    &none    &none
 &trans  &trans  &trans  &trans  &trans  &trans                            &trans                  &trans                  &kp HOME  &kp PAGE_DOWN           &kp PAGE_UP                &kp END    &none    &none
 &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &trans  &trans                    &none                 &none                  &none    &none    &none
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &none                                                                          &trans   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none            &bootloader                                                                     &bootloader   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none                  &none   &none   &none                  &bt BT_CLR       &none  &rgb_ug RGB_MEFS_CMD 5   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none                                  &none                       &none                                       &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none                                &none   &none   &none                       &none  &bl BL_TOG         &rgb_ug RGB_TOG          &bl BL_INC  &bl BL_DEC   &none   &none   &none
            >;
        };

        layer_Layer__4 {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                            &trans                  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

    };
};
