#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
    behaviors {
      #include "macros.dtsi"

      #hm: homerow_mods {
      #    compatible = "zmk,behavior-hold-tap";
      #    label = "HOMEROW_MODS";
      #    #binding-cells = <2>;
      #    tapping-term-ms = <200>;
      #    quick_tap_ms = <175>;
      #    flavor = "tap-preferred";
      #    bindings = <&kp>, <&kp>;
      #};
    };

  keymap {
    compatible = "zmk,keymap";

    default_layer {
      bindings = <
        &kp EQUAL &kp N1    &kp N2   &kp N3   &kp N4     &kp N5 &kp LS(LC(LA(LG(A))))                                                                      &kp LS(LC(LA(LG(V)))) &kp N6 &kp N7 &kp N8    &kp N9   &kp N0   &kp MINUS
        &kp TAB   &kp Q     &kp W    &kp E    &kp R      &kp T  &kp KP_NUMBER_1                                                      &kp KP_NUMBER_3 &kp Y  &kp U  &kp I     &kp O    &kp P    &kp BSLH
        &mt LCTRL ESC   &kp A     &kp S    &kp D    &kp F      &kp G  &kp KP_NUMBER_2    &kp ESC &kp HOME                    &mo 2  &kp RCTRL                   &kp KP_NUMBER_4 &kp H  &kp J  &kp K     &kp L    &kp SEMI &kp SQT
        &kp LSHFT &kp Z     &kp X    &kp C    &kp V      &kp B        &none     &none     &kp END &none &none &kp PG_UP &none     &none            &kp N  &kp M  &kp COMMA &kp DOT  &kp FSLH &kp RSHFT
        &mo 1     &kp GRAVE &kp CAPS &kp LEFT &kp RIGHT               &kp BKSP  &kp LGUI   &kp LALT              &kp PG_DN &kp ENTER &kp SPACE               &kp UP &kp DOWN  &kp LBKT &kp RBKT &mo 2
        >;
    };
    functions {
      bindings = <
        &kp LS(LC(LA(LG(A)))) &kp LA(LG(N1))    &kp LA(LG(N2))   &kp LA(LG(N3))   &kp LA(LG(N4))     &kp LA(LG(N5)) &kp LS(LC(LA(LG(A))))                                                                      &kp LS(LC(LA(LG(V)))) &kp N6 &kp N7 &kp N8    &kp N9   &kp N0   &kp MINUS
        &kp TAB   &kp Q     &kp W    &kp LC(LA(E))    &kp LC(LA(R))      &kp LC(LA(T))  &kp KP_NUMBER_1                                                      &kp KP_NUMBER_3 &kp Y  &kp LC(LA(U))  &kp LC(LA(I))     &kp O    &kp P    &kp BSLH
        &mt LCTRL ESC   &kp A     &kp S    &kp LC(LA(D))    &kp LC(LA(F))      &kp LC(LA(G))  &kp KP_NUMBER_2    &kp ESC &kp HOME                    &mo 2  &kp RCTRL                   &kp KP_NUMBER_4 &kp H  &kp LC(LA(J))  &kp LC(LA(K))     &kp L    &kp SEMI &kp SQT
        &kp LSHFT &kp Z     &kp X    &kp C    &kp V      &kp B        &none     &none     &kp END &none &none &kp PG_UP &none     &none            &kp N  &kp M  &kp COMMA &kp DOT  &kp FSLH &kp RSHFT
        &trans     &kp GRAVE &kp CAPS &kp LC(LA(LEFT)) &kp LC(LA(RIGHT))               &kp BKSP  &kp LGUI   &kp LALT              &kp PG_DN &kp ENTER &kp SPACE               &kp LC(LA(DOWN)) &kp LC(LA(UP))  &kp LBKT &kp RBKT &mo 2
      >;
    };
    mod {
      bindings = <
        &none &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none                                                                                                  &trans        &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none
        &none &none        &none        &none        &none        &none        &bootloader                                                                                            &bootloader   &none        &none        &none        &none        &none        &none
        &none &none        &none        &none        &none        &none        &rgb_ug RGB_MEFS_CMD 5    &bt BT_CLR &bt BT_CLR             &bt BT_CLR &bt BT_CLR         &rgb_ug RGB_MEFS_CMD 5    &none        &none        &none        &none        &none        &none
        &none &none        &none        &none        &none        &none                   &none           &none      &none     &none &none &none      &none      &none                   &none        &none        &none        &none        &none        &none
        &none &none        &none        &bl BL_INC   &bl BL_DEC                           &rgb_ug RGB_TOG &bl BL_TOG &none                 &none      &bl BL_TOG &rgb_ug RGB_TOG                      &bl BL_INC   &bl BL_DEC   &none        &none        &none
      >;
    };
  };
};
