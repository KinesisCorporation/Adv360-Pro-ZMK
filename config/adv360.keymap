
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
 &kp EQUAL     &kp N1    &kp N2    &kp N3     &kp N4   &kp N5               &tog 1                                                                                   &mo 3   &kp N6   &kp N7     &kp N8    &kp N9    &kp N0            &kp MINUS
   &kp TAB      &kp Q     &kp W     &kp F      &kp P    &kp B               &tog 5                                                                                  &tog 1    &kp J    &kp L      &kp U     &kp Y  &kp SEMI             &kp BSLH
 &lt 0 ESC    &lt 0 A   &lt 0 R   &lt 5 S    &lt 1 T  &lt 0 G                &none  &kp LCTRL           &kp LALT   &none   &none        &kp RIGHT_ALT  &kp RCTRL    &tog 5  &lt 0 M  &lt 4 N    &lt 6 E   &lt 0 I   &lt 0 O  &lt 0 DOUBLE_QUOTES
 &kp LSHFT      &kp Z     &kp X     &kp C      &kp D    &kp V                &none      &none  &mt LEFT_GUI HOME   &none   &none  &mt RIGHT_GUI PG_UP      &none     &none    &kp K    &kp H  &kp COMMA   &kp DOT  &kp FSLH            &kp RSHFT
     &mo 2  &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT                     &kp SPACE    &kp DEL            &kp END                            &kp PG_DN  &kp ENTER  &kp BSPC            &kp UP   &kp DOWN  &kp LBKT  &kp RBKT                &mo 2
            >;
        };

        layer_keypad_Right {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                            &trans  &trans  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                            &trans  &trans   &kp KP_N7     &kp KP_N8      &kp KP_N9     &kp KP_MINUS  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans   &none   &none  &trans         &trans     &trans  &trans   &kp KP_N4     &kp KP_N5      &kp KP_N6      &kp KP_PLUS  &trans
 &trans  &trans  &trans  &trans  &trans  &trans             &none   &none  &trans   &none   &none  &trans          &none      &none  &trans   &kp KP_N1     &kp KP_N2      &kp KP_N3     &kp KP_ENTER  &trans
 &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &kp BACKSPACE  &kp KP_N0              &trans        &trans     &kp KP_DOT           &trans  &trans
            >;
        };

        layer_fn {
            bindings = <
 &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6            &tog 1                                                   &mo 3  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
 &trans  &trans  &trans  &trans  &trans  &trans            &tog 4                                                  &trans  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans   &none   &none  &trans  &trans  &trans  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans  &trans  &trans  &trans             &none   &none  &trans   &none   &none  &trans   &none   &none  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &trans  &trans          &trans  &trans   &trans   &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                             &none                                                                              &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4   &none
  &none         &none         &none         &none         &none         &none                       &bootloader                                                                         &bootloader         &none         &none         &none         &none         &none   &none
  &none         &none         &none         &none         &none         &none            &rgb_ug RGB_MEFS_CMD 5  &bt BT_CLR   &none   &none   &none  &bt BT_CLR  &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5         &none         &none         &none         &none         &none   &none
  &none         &none         &none         &none         &none         &none                             &none       &none   &none   &none   &none       &none       &none                   &none         &none         &none         &none         &none         &none   &none
  &none         &none         &none    &bl BL_INC    &bl BL_DEC                                 &rgb_ug RGB_TOG  &bl BL_TOG   &none                       &none  &bl BL_TOG         &rgb_ug RGB_TOG                  &bl BL_INC    &bl BL_DEC         &none         &none   &none
            >;
        };

        layer_Keypad_Left {
            bindings = <
 &trans  &kp KP_MULTIPLY  &kp KP_SLASH     &kp KP_EQUAL  &kp KP_NUMLOCK  &trans               &trans                                                       &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans     &kp KP_MINUS     &kp KP_N9        &kp KP_N8       &kp KP_N7  &trans               &trans                                                       &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans      &kp KP_PLUS     &kp KP_N6        &kp KP_N5       &kp KP_N4  &trans               &trans  &trans  &trans  &trans  &trans  &trans     &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans     &kp KP_ENTER     &kp KP_N3  &kp KP_NUMBER_2       &kp KP_N1  &trans               &trans  &trans  &trans  &trans  &trans  &trans     &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans           &trans    &kp KP_DOT           &trans          &trans                    &kp KP_N0  &trans  &trans                  &trans  &kp SPACE  &kp BSPC          &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_Arrow_Right {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                  &trans  &trans    &trans    &trans     &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                  &trans  &trans    &trans    &kp UP     &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans     &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &trans  &trans            &trans    &trans     &trans  &trans  &trans
            >;
        };

        layer_Arrow_Left {
            bindings = <
 &trans  &trans    &trans    &trans     &trans  &trans            &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans    &trans    &kp UP     &trans  &trans            &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans    &trans    &trans     &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans    &trans    &trans     &trans                    &trans  &trans  &trans                  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

    };
};
