
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */
 
#define MOD_MORPH(NAME, KEY, MOD_KEY) \
  mm_##NAME: mm_##NAME { \
    compatible = "zmk,behavior-mod-morph"; \
    label = #NAME; \
    #binding-cells = <0>; \
    bindings = <&kp KEY>, <&kp MOD_KEY>; \
    mods = <(MOD_LSFT|MOD_RSFT)>; \
  };
  
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"
   
    // various keys for Programmers Dvorak

    MOD_MORPH(pdequal, AMPERSAND, PERCENT)
    
    MOD_MORPH(pdn1, LEFT_BRACKET, N7)
    MOD_MORPH(pdn2, LEFT_BRACE, N5)
    MOD_MORPH(pdn3, RIGHT_BRACE, N3)
    MOD_MORPH(pdn4, LEFT_PARENTHESIS, N1)
    MOD_MORPH(pdn5, EQUAL, N9)
    MOD_MORPH(pdn6, ASTERISK, N0)
    MOD_MORPH(pdn7, RIGHT_PARENTHESIS, N2)
    MOD_MORPH(pdn8, PLUS, N4)
    MOD_MORPH(pdn9, RIGHT_BRACKET, N6)
    MOD_MORPH(pdn0, EXCL, N8)
    MOD_MORPH(pdminus, HASH, GRAVE)

    MOD_MORPH(pdgrave, DOLLAR, TILDE)
    MOD_MORPH(pdlbkt, AT_SIGN, CARET)
    

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
   &mm_pdequal          &mm_pdn1    &mm_pdn2   &mm_pdn3   &mm_pdn4  &mm_pdn5              &tog 1                                                                    &mo 3 &mm_pdn6 &mm_pdn7  &mm_pdn8     &mm_pdn9       &mm_pdn0  &mm_pdminus
       &kp TAB     &kp SEMICOLON   &kp COMMA    &kp DOT      &kp P     &kp Y              &none                                                                     &none    &kp F    &kp G     &kp C        &kp R          &kp L    &kp SLASH
       &kp ESC             &kp A       &kp O      &kp E      &kp U     &kp I              &none      &kp LCTRL  &kp LALT   &none   &none   &kp LGUI  &kp RCTRL      &none    &kp D    &kp H     &kp T        &kp N          &kp S    &kp MINUS
    &kp DELETE  &kp SINGLE_QUOTE       &kp Q      &kp J      &kp K     &kp X              &none          &none  &kp HOME   &none   &none  &kp PG_UP      &none      &none    &kp B    &kp M     &kp W        &kp V          &kp Z    &kp RSHFT
         &mo 2       &mm_pdgrave    &kp CAPS   &kp LEFT  &kp RIGHT               &kp LEFT_SHIFT  &kp BACKSPACE   &kp END                  &kp PG_DN  &kp ENTER  &kp SPACE               &kp UP  &kp DOWN   &mm_pdlbkt  &kp BACKSLASH        &mo 2
            >;
        };

        layer_keypad {
            bindings = <
 &kp EQUAL     &kp N1    &kp N2    &kp N3     &kp N4  &kp N5              &trans                                                                 &mo 3  &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
   &kp TAB      &kp Q     &kp W     &kp E      &kp R   &kp T               &none                                                                 &none   &kp Y   &kp KP_N7     &kp KP_N8      &kp KP_N9     &kp KP_MINUS   &kp BSLH
   &kp ESC      &kp A     &kp S     &kp D      &kp F   &kp G               &none  &kp LCTRL  &kp LALT   &none   &none   &kp LGUI  &kp RCTRL      &none   &kp H   &kp KP_N4     &kp KP_N5      &kp KP_N6      &kp KP_PLUS    &kp SQT
 &kp LSHFT      &kp Z     &kp X     &kp C      &kp V   &kp B               &none      &none  &kp HOME   &none   &none  &kp PG_UP      &none      &none   &kp N   &kp KP_N1     &kp KP_N2      &kp KP_N3     &kp KP_ENTER  &kp RSHFT
     &mo 2  &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT                    &kp BSPC    &kp DEL   &kp END                  &kp PG_DN  &kp ENTER  &kp KP_N0              &kp UP      &kp DOWN     &kp KP_DOT         &kp RBKT      &mo 2
            >;
        };

        layer_fn {
            bindings = <
 &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6            &tog 1                                                   &mo 3  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
 &trans  &trans  &trans  &trans  &trans  &trans             &none                                                   &none  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans  &trans  &trans  &trans             &none  &trans  &trans   &none   &none  &trans  &trans   &none  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans  &trans  &trans  &trans             &none   &none  &trans   &none   &none  &trans   &none   &none  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &trans  &trans          &trans  &trans   &trans   &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                             &none                                                                              &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4   &none
  &none         &none         &none         &none         &none         &none                       &bootloader                                                                         &bootloader         &none         &none         &none         &none         &none   &none
  &none         &none         &none         &none         &none         &none            &rgb_ug RGB_MEFS_CMD 5  &bt BT_CLR   &none   &none   &none  &bt BT_CLR  &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5         &none         &none         &none         &none         &none   &none
  &none         &none         &none         &none         &none         &none                             &none       &none   &none   &none   &none       &none       &none                   &none         &none         &none         &none         &none         &none   &none
  &none         &none         &none    &bl BL_INC    &bl BL_DEC                                 &rgb_ug RGB_TOG  &bl BL_TOG   &none                       &none  &bl BL_TOG         &rgb_ug RGB_TOG                  &bl BL_INC    &bl BL_DEC         &none         &none   &none
            >;
        };

    };
};
