
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
                        &kp RIGHT_BRACKET  &kp N1     &kp N2    &kp N3     &kp N4     &kp N5     &tog 1      &mo 3             &kp N6               &kp N7       &kp N8             &kp N9             &kp N0     &kp SINGLE_QUOTE
                        &kp TAB            &kp Q      &kp W     &kp E      &kp R      &kp T      &none       &none             &kp Y                &kp U        &kp I              &kp O              &kp P      &kp LEFT_BRACKET
                        &kp ESC            &kp A      &kp S     &kp D      &kp F      &kp G      &none       &kp LEFT_SHIFT    &kp LEFT_COMMAND     &kp LGUI     &kp RIGHT_SHIFT    &none              &kp H      &kp J      &kp K       &kp L   &kp SEMI    &kp SQT
                        &kp CAPS           &kp Z      &kp X     &kp C      &kp V      &kp B      &none       &none             &kp LEFT_CONTROL     &none        &none              &kp RIGHT_CONTROL  &none      &none      &kp N       &kp M   &kp COMMA   &kp DOT  &kp SLASH  &kp RSHFT
                        &mo 3              &kp TILDE  &mo 2     &kp LEFT   &kp RIGHT  &kp BSPC   &mo 4       &kp LG(SPACE)     &kp LG(TAB)          &lt 1 ENTER  &kp SPACE          &kp UP             &kp DOWN   &kp MINUS  &kp EQUAL   &mo 2
                       >;
        };

        layer_keypad {
            bindings = <
                        &kp EQUAL   &kp N1     &kp N2     &kp N3        &kp N4           &kp N5         &trans   &mo 3   &kp N6  &kp KP_NUM   &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
                        &kp TAB     &trans     &kp KP_N7  &kp KP_N8     &kp KP_N9        &kp T          &none    &none   &kp Y   &kp KP_N7    &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &kp BSLH
                        &kp ESC     &trans     &kp KP_N4  &kp LA(SPACE) &kp LG(LA(F))    &kp LG(LA(I))  &none    &trans  &trans  &trans       &trans        &none          &kp KP_N0        &kp KP_N4   &kp KP_N5  &kp KP_N6   &kp LS(Z)    &kp SQT
                        &kp LSHFT   &trans     &kp KP_N1  &kp KP_N2     &kp KP_NUMBER_3  &kp B          &none    &none   &trans  &none        &none         &trans         &none            &none       &kp N      &kp KP_N1   &kp KP_N2    &kp KP_N3  &kp KP_ENTER  &kp RSHFT
                        &mo 2       &kp GRAVE  &kp CAPS   &kp LEFT      &kp RIGHT        &kp BSPC       &kp DEL  &trans  &trans  &kp ENTER    &trans        &kp UP         &kp DOWN         &kp KP_DOT  &kp RBKT   &mo 2
                       >;
        };

        layer_fn {
            bindings = <
                        &kp F1  &kp F2  &kp F3  &kp F4  &kp F5    &kp F6            &trans     &mo 3   &kp F7  &kp F8  &kp F9  &kp F10  &kp F11               &kp F12
                        &trans  &trans  &trans  &trans  &trans    &trans            &none      &none   &trans  &trans  &trans  &trans   &trans                &trans
                        &trans  &trans  &trans  &trans  &trans    &trans            &none      &trans  &trans  &trans  &trans  &none    &trans                &trans                  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans  &trans    &trans            &none      &none   &trans  &none   &none   &trans   &none                 &none                   &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &kp LG(LA(LEFT))  &kp LG(LA(RIGHT)) &trans     &trans  &trans  &trans  &trans  &trans   &kp LG(LA(LC(LEFT)))  &kp LG(LA(LC(RIGHT)))   &trans  &trans  &trans  &trans
                       >;
        };

        layer_mod {
            bindings = <
                        &none         &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3     &bt BT_SEL 4     &none                    &trans        &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2       &bt BT_SEL 3             &bt BT_SEL 4  &none
                        &none         &none         &none         &none         &none            &none            &bootloader              &bootloader   &none         &none            &none              &none                    &none         &none
                        &none         &none         &none         &none         &none            &none            &rgb_ug RGB_MEFS_CMD 5   &bt BT_CLR    &none         &bt BT_CLR       &bt BT_CLR         &rgb_ug RGB_MEFS_CMD 5   &none         &none   &none   &none   &none   &none
                        &none         &none         &none         &none         &none            &none            &none                    &none         &none         &none            &none              &none                    &none         &none   &none   &none   &none   &none   &none   &none
                        &none         &none         &none         &bl BL_INC    &bl BL_DEC       &rgb_ug RGB_TOG  &bl BL_TOG               &none         &none         &bl BL_TOG       &rgb_ug RGB_TOG    &bl BL_INC               &bl BL_DEC    &none   &none   &none
                       >;
        };

        layer_code {
            bindings = <
                        &trans   &trans                &trans        &trans                 &trans                &trans                &trans  &trans    &trans             &trans             &trans               &trans               &trans                 &trans
                        &trans   &kp Z                 &kp Q         &kp RIGHT_BRACKET      &kp RIGHT_BRACE       &kp LS(TAB)           &trans  &trans    &kp TAB            &kp SINGLE_QUOTE   &kp DOUBLE_QUOTES    &kp LEFT_BRACKET     &kp LEFT_BRACE         &trans
                        &trans   &kp LS(Q)             &kp UNDER     &kp MINUS              &kp LEFT_PARENTHESIS  &kp LS(W)             &trans  &trans    &trans             &trans             &trans               &trans               &kp LS(E)              &kp RIGHT_PARENTHESIS   &kp EQUAL     &kp PLUS      &kp LS(Z)   &kp PIPE
                        &trans   &kp EXCLAMATION       &kp AT_SIGN   &kp POUND              &kp DOLLAR            &kp BACKSLASH         &trans  &trans    &trans             &trans             &trans               &trans               &trans                 &trans                  &kp GRAVE     &kp PERCENT   &kp CARET   &kp AMPERSAND  &kp ASTERISK    &trans
                        &trans   &trans                &trans        &kp LA(LEFT)           &kp LA(RIGHT)         &kp LA(BACKSPACE)     &trans  &trans    &kp LG(GRAVE)      &kp ESCAPE         &kp SPACE            &kp LC(UP)           &kp LC(DOWN)           &trans                  &trans        &trans
                       >;
        };

    };
};