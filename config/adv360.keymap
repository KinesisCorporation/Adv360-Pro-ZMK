
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
      &kp GRAVE              &kp N1                   &kp N2                      &kp N3                  &kp N4  &kp N5                     &tog 1                                                                                                          &kp N6  &kp N7    &kp N8  &kp N9    &kp N0           &kp MINUS            &kp EQUAL
        &kp TAB               &kp Q                    &kp W                       &kp E                   &kp R   &kp T                  &kp GRAVE                                                                                                       &kp MINUS   &kp Y     &kp U   &kp I     &kp O            &kp SEMI             &kp BSLH
  &mt LCTRL ESC               &kp A                    &kp S                       &kp D                   &kp F   &kp G            &kp PRINTSCREEN    &kp LS(LC(LWIN))              &out OUT_TOG                                  &kp LGUI    &kp MINUS      &sl 2   &kp H     &kp J   &kp K     &kp L           &lt 2 DOT       &kp APOSTROPHE
 &kp LEFT_SHIFT         &ht_bl LSHIFT Z                    &kp X                       &kp C                   &kp V   &kp B                                                 &kt LS(LG(LEFT_CONTROL))                  &kt LS(LA(LEFT_CONTROL))                           &kp B     &kp N   &kp M     &kp P  &mt LEFT_SHIFT DOT  &mt RIGHT_SHIFT DOT
          &none  &lt 1 LEFT_BRACKET  &mt LCTRL RIGHT_BRACKET  &mt LEFT_WIN RIGHT_CONTROL  &mt LEFT_ALT RIGHT_ALT                      &kp BACKSPACE  &mt LEFT_SHIFT DEL                     &mo 3                                    &tog 2  &lt 1 ENTER  &kp SPACE          &kp LEFT  &kp UP  &kp DOWN           &kp RIGHT            &kp COMMA
            >;
        };

        layer_keypad {
            bindings = <
     &mo 0  &kp N1  &kp N2  &kp N3        &kp N4  &kp N5              &trans                                                                     &mo 3  &kp N6    &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
   &kp TAB   &mo 0   &mo 0   &mo 0         &mo 0   &kp T               &none                                                                     &none   &kp Y  &kp NUMBER_7  &kp NUMBER_8   &kp NUMBER_9     &kp KP_MINUS   &kp BSLH
   &kp ESC   &mo 0   &mo 0   &mo 0         &mo 0   &kp G               &none  &kp LCTRL   &kp LALT                   &kp LGUI  &kp RCTRL         &none   &kp H  &kp NUMBER_4  &kp NUMBER_5   &kp NUMBER_6      &kp KP_PLUS    &kp SQT
 &kp LSHFT   &mo 0   &mo 0   &mo 0         &mo 0   &kp B                                    &trans                  &kp PG_UP                            &kp N  &kp NUMBER_1  &kp NUMBER_2   &kp NUMBER_3     &kp KP_ENTER  &kp RSHFT
    &trans  &trans  &trans  &trans  &kp LEFT_WIN                    &kp BSPC    &kp DEL  &kp COMMA                  &kp PG_DN     &trans  &kp NUMBER_0                &kp N0     &kp COMMA        &kp DOT     &kp KP_ENTER      &mo 2
            >;
        };

        layer_fn {
            bindings = <
 &kp F1  &kp F2      &kp F3  &kp F4  &kp F5  &kp F6            &tog 1                                                  &kp F7  &kp F8       &kp F9          &kp F10       &kp F11          &kp F12  &kp F13
 &trans  &trans  &kp LA(F4)  &trans  &trans  &trans             &none                                                   &none  &trans       &trans           &trans        &trans        &kp COLON   &trans
 &trans  &trans      &trans  &trans  &trans  &trans             &none  &trans  &trans                  &trans  &trans   &none  &trans    &kp COLON  &kp EXCLAMATION  &kp QUESTION           &trans   &trans
 &trans  &trans      &trans  &trans  &trans  &trans                            &trans                  &trans                  &trans       &trans           &trans        &trans  &kp PRINTSCREEN   &trans
 &trans  &trans      &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &trans  &trans          &kp PAGE_UP    &kp PAGE_DOWN      &kp HOME          &kp END   &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &none                                                                          &trans   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none            &bootloader                                                                     &bootloader   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none                  &none   &none   &none                  &bt BT_CLR       &none  &rgb_ug RGB_MEFS_CMD 5   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none                                  &none                       &none                                       &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none                                &none   &none   &none                       &none  &bl BL_TOG         &rgb_ug RGB_TOG          &bl BL_INC  &bl BL_DEC   &none   &none   &none
            >;
        };

        layer_Layer__4 {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                  &trans  &trans      &trans      &trans      &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                  &trans  &trans  &kp LG(LC(N7))  &kp LG(LC(N8))  &kp LG(LC(N9))  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &kp LG(LC(N4))      &kp LG(N5)      &kp LG(N6)  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                            &trans                  &trans                  &trans  &kp LG(LS(N1))  &kp LG(LC(N2))  &kp LG(LC(N3))  &trans  &trans
 &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &trans  &trans           &kp PG_UP   &kp PG_DN      &trans  &trans  &trans
            >;
        };

        layer_shortcut {
            bindings = <
 &trans  &trans      &trans  &trans  &trans  &trans            &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &kp LA(F4)  &trans  &trans  &trans            &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans      &trans   &kp A  &trans  &trans            &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans      &trans  &trans  &trans  &trans                            &trans                  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans      &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

    };
};
