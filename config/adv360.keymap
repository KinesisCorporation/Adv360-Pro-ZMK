
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/rgb.h>

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
      &kp GRAVE        &kp N1  &kp N2  &kp N3  &kp N4     &kp N5               &kp N6     &kp N7     &kp N8     &kp N9    &kp N0      &kp MINUS  &kp EQUAL  &kp BSLH
        &kp ESC         &kp Q   &kp W   &kp E   &kp R      &kp T            &kp RIGHT     &kp UP      &kp Y      &kp U     &kp I          &kp O      &kp P   &kp SQT
 &kp LEFT_SHIFT         &kp A   &kp S   &kp D   &kp F      &kp G             &kp LEFT  &kp LCTRL   &kp LALT                       &kp RIGHT_ALT  &kp RCTRL  &kp DOWN          &kp H   &kp J      &kp K    &kp L  &kp SEMI  &kp RIGHT_SHIFT
        &kp TAB         &kp Z   &kp X   &kp C   &kp V      &kp B                &none      &none   &kp HOME      &none     &none      &kp PG_UP      &none     &none          &kp N   &kp M  &kp COMMA  &kp DOT  &kp FSLH     &kp CAPSLOCK
          &mo 2  &kp LEFT_WIN   &none   &none   &none  &kp SPACE              &kp DEL    &kp END  &kp PG_DN  &kp ENTER  &kp BSPC          &none   &kp LBKT  &kp RBKT  &kp RIGHT_WIN   &mo 1
            >;
        };

        layer_fn {
            bindings = <
 &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6             &none   &none  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
 &trans  &trans  &trans  &trans  &trans  &trans             &none   &none  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans  &trans  &trans  &trans             &none  &trans  &trans                   &trans   &trans    &none  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans             &none   &none  &trans   &none   &none   &trans    &none    &none  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans   &trans   &trans   &trans  &trans  &trans
            >;
        };

        layer_mod {
            bindings = <
  &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3     &bt BT_SEL 4                 &none                 &none                 &none  &kp KP_NLCK     &kp KP_SLASH  &kp KP_MULTIPLY  &kp KP_MINUS   &bt BT_CLR
 &bootloader         &none         &none         &none         &none            &none            &bt BT_NXT            &bl BL_INC                 &none    &kp KP_N7        &kp KP_N8        &kp KP_N9   &kp KP_PLUS  &bootloader
      &reset         &none         &none         &none         &none            &none            &bt BT_PRV            &bt BT_CLR           &bootloader                                    &bootloader    &bt BT_CLR   &bl BL_DEC         &none  &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_ENTER  &reset
       &none         &none         &none         &none         &none            &none                 &none                 &none                &reset        &none            &none           &reset         &none        &none         &none  &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_EQUAL   &none
       &none         &none         &none         &none         &none  &rgb_ug RGB_TOG            &bl BL_TOG  &rgb_ug RGB_MEFS_CMD  &rgb_ug RGB_MEFS_CMD   &bl BL_TOG  &rgb_ug RGB_TOG       &kp KP_DOT     &kp KP_N0   &kp KP_DOT  &kp KP_COMMA      &none
            >;
        };

    };
};
